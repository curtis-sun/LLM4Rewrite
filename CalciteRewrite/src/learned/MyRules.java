package learned;

import org.apache.calcite.plan.RelOptRule;
import org.apache.calcite.rel.RelNode;
import org.apache.calcite.rel.core.*;
import org.apache.calcite.rel.rules.CoreRules;
import org.apache.calcite.rel.rules.PruneEmptyRules;

import java.util.Map;

import static java.util.Map.entry;
import static rewriter.MyRules.*;

public class MyRules {
    public static final Map<String, Map<String, RelOptRule>> RULE_SEQS = Map.of(
            "rule_agg", Map.ofEntries(entry("PROJECT_AGGREGATE_MERGE", CoreRules.PROJECT_AGGREGATE_MERGE), entry("AGGREGATE_CASE_TO_FILTER", CoreRules.AGGREGATE_CASE_TO_FILTER), entry("AGGREGATE_MERGE", CoreRules.AGGREGATE_MERGE), entry("AGGREGATE_EXPAND_DISTINCT_AGGREGATES", CoreRules.AGGREGATE_EXPAND_DISTINCT_AGGREGATES), entry("AGGREGATE_EXPAND_DISTINCT_AGGREGATES_TO_JOIN", CoreRules.AGGREGATE_EXPAND_DISTINCT_AGGREGATES_TO_JOIN), entry("AGGREGATE_JOIN_TRANSPOSE_EXTENDED", CoreRules.AGGREGATE_JOIN_TRANSPOSE_EXTENDED), entry("AGGREGATE_PROJECT_MERGE", CoreRules.AGGREGATE_PROJECT_MERGE), entry("AGGREGATE_ANY_PULL_UP_CONSTANTS", CoreRules.AGGREGATE_ANY_PULL_UP_CONSTANTS), entry("AGGREGATE_UNION_AGGREGATE", CoreRules.AGGREGATE_UNION_AGGREGATE), entry("AGGREGATE_UNION_TRANSPOSE", CoreRules.AGGREGATE_UNION_TRANSPOSE), entry("AGGREGATE_REDUCE_FUNCTIONS", CoreRules.AGGREGATE_REDUCE_FUNCTIONS), entry("AGGREGATE_REMOVE", CoreRules.AGGREGATE_REMOVE), entry("AGGREGATE_JOIN_REMOVE", CoreRules.AGGREGATE_JOIN_REMOVE), entry("AGGREGATE_JOIN_JOIN_REMOVE", CoreRules.AGGREGATE_JOIN_JOIN_REMOVE), entry("AGGREGATE_VALUES", CoreRules.AGGREGATE_VALUES), entry("AGGREGATE_INSTANCE", PruneEmptyRules.AGGREGATE_INSTANCE)),
            "rule_filter", Map.ofEntries(entry("FILTER_EXPAND_IS_NOT_DISTINCT_FROM", CoreRules.FILTER_EXPAND_IS_NOT_DISTINCT_FROM), entry("FILTER_AGGREGATE_TRANSPOSE", CoreRules.FILTER_AGGREGATE_TRANSPOSE), entry("FILTER_CORRELATE", CoreRules.FILTER_CORRELATE), entry("FILTER_INTO_JOIN", FILTER_INTO_JOIN), entry("JOIN_CONDITION_PUSH", CoreRules.JOIN_CONDITION_PUSH), entry("FILTER_MERGE", CoreRules.FILTER_MERGE), entry("FILTER_MULTI_JOIN_MERGE", CoreRules.FILTER_MULTI_JOIN_MERGE), entry("FILTER_PROJECT_TRANSPOSE", CoreRules.FILTER_PROJECT_TRANSPOSE), entry("FILTER_SET_OP_TRANSPOSE", CoreRules.FILTER_SET_OP_TRANSPOSE), entry("FILTER_TABLE_FUNCTION_TRANSPOSE", CoreRules.FILTER_TABLE_FUNCTION_TRANSPOSE), entry("FILTER_SCAN", CoreRules.FILTER_SCAN), entry("PROJECT_FILTER_VALUES_MERGE", CoreRules.PROJECT_FILTER_VALUES_MERGE), entry("FILTER_VALUES_MERGE", CoreRules.FILTER_VALUES_MERGE), entry("FILTER_SUB_QUERY_TO_CORRELATE", CoreRules.FILTER_SUB_QUERY_TO_CORRELATE), entry("FILTER_REDUCE_EXPRESSIONS", FILTER_REDUCE_EXPRESSIONS), entry("PROJECT_REDUCE_EXPRESSIONS", PROJECT_REDUCE_EXPRESSIONS), entry("FILTER_INSTANCE", PruneEmptyRules.FILTER_INSTANCE)),
            "rule_join", Map.ofEntries(entry("JOIN_ON_UNIQUE_TO_SEMI_JOIN", CoreRules.JOIN_ON_UNIQUE_TO_SEMI_JOIN), entry("JOIN_TO_SEMI_JOIN", CoreRules.JOIN_TO_SEMI_JOIN), entry("JOIN_PUSH_TRANSITIVE_PREDICATES", CoreRules.JOIN_PUSH_TRANSITIVE_PREDICATES), entry("JOIN_PUSH_EXPRESSIONS", CoreRules.JOIN_PUSH_EXPRESSIONS), entry("JOIN_EXTRACT_FILTER", CoreRules.JOIN_EXTRACT_FILTER), entry("JOIN_PROJECT_BOTH_TRANSPOSE", CoreRules.JOIN_PROJECT_BOTH_TRANSPOSE), entry("JOIN_PROJECT_LEFT_TRANSPOSE", CoreRules.JOIN_PROJECT_LEFT_TRANSPOSE), entry("JOIN_PROJECT_RIGHT_TRANSPOSE", CoreRules.JOIN_PROJECT_RIGHT_TRANSPOSE), entry("JOIN_LEFT_UNION_TRANSPOSE", CoreRules.JOIN_LEFT_UNION_TRANSPOSE), entry("JOIN_RIGHT_UNION_TRANSPOSE", CoreRules.JOIN_RIGHT_UNION_TRANSPOSE), entry("PROJECT_JOIN_JOIN_REMOVE", CoreRules.PROJECT_JOIN_JOIN_REMOVE), entry("PROJECT_JOIN_REMOVE", CoreRules.PROJECT_JOIN_REMOVE), entry("AGGREGATE_JOIN_JOIN_REMOVE", CoreRules.AGGREGATE_JOIN_JOIN_REMOVE), entry("AGGREGATE_JOIN_REMOVE", CoreRules.AGGREGATE_JOIN_REMOVE), entry("JOIN_SUB_QUERY_TO_CORRELATE", CoreRules.JOIN_SUB_QUERY_TO_CORRELATE), entry("JOIN_REDUCE_EXPRESSIONS", JOIN_REDUCE_EXPRESSIONS), entry("JOIN_LEFT_INSTANCE", PruneEmptyRules.JOIN_LEFT_INSTANCE), entry("JOIN_RIGHT_INSTANCE", PruneEmptyRules.JOIN_RIGHT_INSTANCE)),
            "rule_project", Map.ofEntries(entry("PROJECT_AGGREGATE_MERGE", CoreRules.PROJECT_AGGREGATE_MERGE), entry("PROJECT_CALC_MERGE", CoreRules.PROJECT_CALC_MERGE), entry("PROJECT_CORRELATE_TRANSPOSE", CoreRules.PROJECT_CORRELATE_TRANSPOSE), entry("PROJECT_MERGE", CoreRules.PROJECT_MERGE), entry("PROJECT_MULTI_JOIN_MERGE", CoreRules.PROJECT_MULTI_JOIN_MERGE), entry("PROJECT_REMOVE", CoreRules.PROJECT_REMOVE), entry("PROJECT_TO_CALC", CoreRules.PROJECT_TO_CALC), entry("PROJECT_FILTER_VALUES_MERGE", CoreRules.PROJECT_FILTER_VALUES_MERGE), entry("PROJECT_VALUES_MERGE", CoreRules.PROJECT_VALUES_MERGE), entry("PROJECT_JOIN_JOIN_REMOVE", CoreRules.PROJECT_JOIN_JOIN_REMOVE), entry("PROJECT_JOIN_REMOVE", CoreRules.PROJECT_JOIN_REMOVE), entry("PROJECT_TO_SEMI_JOIN", CoreRules.PROJECT_TO_SEMI_JOIN), entry("PROJECT_SUB_QUERY_TO_CORRELATE", CoreRules.PROJECT_SUB_QUERY_TO_CORRELATE), entry("PROJECT_REDUCE_EXPRESSIONS", PROJECT_REDUCE_EXPRESSIONS), entry("PROJECT_INSTANCE", PruneEmptyRules.PROJECT_INSTANCE)),
            "rule_calc", Map.ofEntries(entry("CALC_MERGE", CoreRules.CALC_MERGE), entry("CALC_REMOVE", CoreRules.CALC_REMOVE)),
            "rule_orderby", Map.ofEntries(entry("SORT_JOIN_TRANSPOSE", CoreRules.SORT_JOIN_TRANSPOSE), entry("SORT_PROJECT_TRANSPOSE", CoreRules.SORT_PROJECT_TRANSPOSE), entry("SORT_UNION_TRANSPOSE", CoreRules.SORT_UNION_TRANSPOSE), entry("SORT_REMOVE_CONSTANT_KEYS", CoreRules.SORT_REMOVE_CONSTANT_KEYS), entry("SORT_REMOVE", CoreRules.SORT_REMOVE), entry("SORT_INSTANCE", PruneEmptyRules.SORT_INSTANCE), entry("SORT_FETCH_ZERO_INSTANCE", PruneEmptyRules.SORT_FETCH_ZERO_INSTANCE)),
            "rule_setop", Map.ofEntries(entry("UNION_MERGE", CoreRules.UNION_MERGE), entry("UNION_REMOVE", CoreRules.UNION_REMOVE), entry("UNION_TO_DISTINCT", CoreRules.UNION_TO_DISTINCT), entry("UNION_PULL_UP_CONSTANTS", CoreRules.UNION_PULL_UP_CONSTANTS), entry("INTERSECT_TO_DISTINCT", CoreRules.INTERSECT_TO_DISTINCT), entry("UNION_INSTANCE", PruneEmptyRules.UNION_INSTANCE), entry("INTERSECT_INSTANCE", PruneEmptyRules.INTERSECT_INSTANCE), entry("MINUS_INSTANCE", PruneEmptyRules.MINUS_INSTANCE)),
            "rule_reduce_sub_query", Map.ofEntries(entry("PROJECT_SUB_QUERY_TO_CORRELATE", CoreRules.PROJECT_SUB_QUERY_TO_CORRELATE), entry("FILTER_SUB_QUERY_TO_CORRELATE", CoreRules.FILTER_SUB_QUERY_TO_CORRELATE), entry("JOIN_SUB_QUERY_TO_CORRELATE", CoreRules.JOIN_SUB_QUERY_TO_CORRELATE)),
            "rule_reduce_exp",Map.ofEntries(entry("PROJECT_REDUCE_EXPRESSIONS", PROJECT_REDUCE_EXPRESSIONS), entry("FILTER_REDUCE_EXPRESSIONS", FILTER_REDUCE_EXPRESSIONS), entry("JOIN_REDUCE_EXPRESSIONS", JOIN_REDUCE_EXPRESSIONS), entry("WINDOW_REDUCE_EXPRESSIONS", WINDOW_REDUCE_EXPRESSIONS))
    );

    public static final Map<String,Class> RULE_TYPES = Map.of(
            "rule_filter", Filter.class,
            "rule_join", Join.class,
            "rule_agg", Aggregate.class,
            "rule_project", Project.class,
            "rule_calc", Calc.class,
            "rule_orderby", Sort.class,
            "rule_setop", SetOp.class,
            "rule_reduce_sub_query", RelNode.class,
            "rule_reduce_exp", RelNode.class
    );
}
